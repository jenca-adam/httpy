# Auto - generated

# Pickled static huffman table
import pickle


def int2bits(int, nbits=None):
    bits = bin(int)[2:]
    if nbits is not None:
        bits = "0" * (nbits - len(bits)) + bits
    return bits


HUFFMAN_TABLE_RAW = b"\x80\x04\x95\x06\x08\x00\x00\x00\x00\x00\x00]\x94(M\xf8\x1fK\r\x86\x94J\xd8\xff\x7f\x00K\x17\x86\x94J\xe2\xff\xff\x0fK\x1c\x86\x94J\xe3\xff\xff\x0fK\x1c\x86\x94J\xe4\xff\xff\x0fK\x1c\x86\x94J\xe5\xff\xff\x0fK\x1c\x86\x94J\xe6\xff\xff\x0fK\x1c\x86\x94J\xe7\xff\xff\x0fK\x1c\x86\x94J\xe8\xff\xff\x0fK\x1c\x86\x94J\xea\xff\xff\x00K\x18\x86\x94J\xfc\xff\xff?K\x1e\x86\x94J\xe9\xff\xff\x0fK\x1c\x86\x94J\xea\xff\xff\x0fK\x1c\x86\x94J\xfd\xff\xff?K\x1e\x86\x94J\xeb\xff\xff\x0fK\x1c\x86\x94J\xec\xff\xff\x0fK\x1c\x86\x94J\xed\xff\xff\x0fK\x1c\x86\x94J\xee\xff\xff\x0fK\x1c\x86\x94J\xef\xff\xff\x0fK\x1c\x86\x94J\xf0\xff\xff\x0fK\x1c\x86\x94J\xf1\xff\xff\x0fK\x1c\x86\x94J\xf2\xff\xff\x0fK\x1c\x86\x94J\xfe\xff\xff?K\x1e\x86\x94J\xf3\xff\xff\x0fK\x1c\x86\x94J\xf4\xff\xff\x0fK\x1c\x86\x94J\xf5\xff\xff\x0fK\x1c\x86\x94J\xf6\xff\xff\x0fK\x1c\x86\x94J\xf7\xff\xff\x0fK\x1c\x86\x94J\xf8\xff\xff\x0fK\x1c\x86\x94J\xf9\xff\xff\x0fK\x1c\x86\x94J\xfa\xff\xff\x0fK\x1c\x86\x94J\xfb\xff\xff\x0fK\x1c\x86\x94K\x14K\x06\x86\x94M\xf8\x03K\n\x86\x94M\xf9\x03K\n\x86\x94M\xfa\x0fK\x0c\x86\x94M\xf9\x1fK\r\x86\x94K\x15K\x06\x86\x94K\xf8K\x08\x86\x94M\xfa\x07K\x0b\x86\x94M\xfa\x03K\n\x86\x94M\xfb\x03K\n\x86\x94K\xf9K\x08\x86\x94M\xfb\x07K\x0b\x86\x94K\xfaK\x08\x86\x94K\x16K\x06\x86\x94K\x17K\x06\x86\x94K\x18K\x06\x86\x94K\x00K\x05\x86\x94K\x01K\x05\x86\x94K\x02K\x05\x86\x94K\x19K\x06\x86\x94K\x1aK\x06\x86\x94K\x1bK\x06\x86\x94K\x1cK\x06\x86\x94K\x1dK\x06\x86\x94K\x1eK\x06\x86\x94K\x1fK\x06\x86\x94K\\K\x07\x86\x94K\xfbK\x08\x86\x94M\xfc\x7fK\x0f\x86\x94K K\x06\x86\x94M\xfb\x0fK\x0c\x86\x94M\xfc\x03K\n\x86\x94M\xfa\x1fK\r\x86\x94K!K\x06\x86\x94K]K\x07\x86\x94K^K\x07\x86\x94K_K\x07\x86\x94K`K\x07\x86\x94KaK\x07\x86\x94KbK\x07\x86\x94KcK\x07\x86\x94KdK\x07\x86\x94KeK\x07\x86\x94KfK\x07\x86\x94KgK\x07\x86\x94KhK\x07\x86\x94KiK\x07\x86\x94KjK\x07\x86\x94KkK\x07\x86\x94KlK\x07\x86\x94KmK\x07\x86\x94KnK\x07\x86\x94KoK\x07\x86\x94KpK\x07\x86\x94KqK\x07\x86\x94KrK\x07\x86\x94K\xfcK\x08\x86\x94KsK\x07\x86\x94K\xfdK\x08\x86\x94M\xfb\x1fK\r\x86\x94J\xf0\xff\x07\x00K\x13\x86\x94M\xfc\x1fK\r\x86\x94M\xfc?K\x0e\x86\x94K\"K\x06\x86\x94M\xfd\x7fK\x0f\x86\x94K\x03K\x05\x86\x94K#K\x06\x86\x94K\x04K\x05\x86\x94K$K\x06\x86\x94K\x05K\x05\x86\x94K%K\x06\x86\x94K&K\x06\x86\x94K'K\x06\x86\x94K\x06K\x05\x86\x94KtK\x07\x86\x94KuK\x07\x86\x94K(K\x06\x86\x94K)K\x06\x86\x94K*K\x06\x86\x94K\x07K\x05\x86\x94K+K\x06\x86\x94KvK\x07\x86\x94K,K\x06\x86\x94K\x08K\x05\x86\x94K\tK\x05\x86\x94K-K\x06\x86\x94KwK\x07\x86\x94KxK\x07\x86\x94KyK\x07\x86\x94KzK\x07\x86\x94K{K\x07\x86\x94M\xfe\x7fK\x0f\x86\x94M\xfc\x07K\x0b\x86\x94M\xfd?K\x0e\x86\x94M\xfd\x1fK\r\x86\x94J\xfc\xff\xff\x0fK\x1c\x86\x94J\xe6\xff\x0f\x00K\x14\x86\x94J\xd2\xff?\x00K\x16\x86\x94J\xe7\xff\x0f\x00K\x14\x86\x94J\xe8\xff\x0f\x00K\x14\x86\x94J\xd3\xff?\x00K\x16\x86\x94J\xd4\xff?\x00K\x16\x86\x94J\xd5\xff?\x00K\x16\x86\x94J\xd9\xff\x7f\x00K\x17\x86\x94J\xd6\xff?\x00K\x16\x86\x94J\xda\xff\x7f\x00K\x17\x86\x94J\xdb\xff\x7f\x00K\x17\x86\x94J\xdc\xff\x7f\x00K\x17\x86\x94J\xdd\xff\x7f\x00K\x17\x86\x94J\xde\xff\x7f\x00K\x17\x86\x94J\xeb\xff\xff\x00K\x18\x86\x94J\xdf\xff\x7f\x00K\x17\x86\x94J\xec\xff\xff\x00K\x18\x86\x94J\xed\xff\xff\x00K\x18\x86\x94J\xd7\xff?\x00K\x16\x86\x94J\xe0\xff\x7f\x00K\x17\x86\x94J\xee\xff\xff\x00K\x18\x86\x94J\xe1\xff\x7f\x00K\x17\x86\x94J\xe2\xff\x7f\x00K\x17\x86\x94J\xe3\xff\x7f\x00K\x17\x86\x94J\xe4\xff\x7f\x00K\x17\x86\x94J\xdc\xff\x1f\x00K\x15\x86\x94J\xd8\xff?\x00K\x16\x86\x94J\xe5\xff\x7f\x00K\x17\x86\x94J\xd9\xff?\x00K\x16\x86\x94J\xe6\xff\x7f\x00K\x17\x86\x94J\xe7\xff\x7f\x00K\x17\x86\x94J\xef\xff\xff\x00K\x18\x86\x94J\xda\xff?\x00K\x16\x86\x94J\xdd\xff\x1f\x00K\x15\x86\x94J\xe9\xff\x0f\x00K\x14\x86\x94J\xdb\xff?\x00K\x16\x86\x94J\xdc\xff?\x00K\x16\x86\x94J\xe8\xff\x7f\x00K\x17\x86\x94J\xe9\xff\x7f\x00K\x17\x86\x94J\xde\xff\x1f\x00K\x15\x86\x94J\xea\xff\x7f\x00K\x17\x86\x94J\xdd\xff?\x00K\x16\x86\x94J\xde\xff?\x00K\x16\x86\x94J\xf0\xff\xff\x00K\x18\x86\x94J\xdf\xff\x1f\x00K\x15\x86\x94J\xdf\xff?\x00K\x16\x86\x94J\xeb\xff\x7f\x00K\x17\x86\x94J\xec\xff\x7f\x00K\x17\x86\x94J\xe0\xff\x1f\x00K\x15\x86\x94J\xe1\xff\x1f\x00K\x15\x86\x94J\xe0\xff?\x00K\x16\x86\x94J\xe2\xff\x1f\x00K\x15\x86\x94J\xed\xff\x7f\x00K\x17\x86\x94J\xe1\xff?\x00K\x16\x86\x94J\xee\xff\x7f\x00K\x17\x86\x94J\xef\xff\x7f\x00K\x17\x86\x94J\xea\xff\x0f\x00K\x14\x86\x94J\xe2\xff?\x00K\x16\x86\x94J\xe3\xff?\x00K\x16\x86\x94J\xe4\xff?\x00K\x16\x86\x94J\xf0\xff\x7f\x00K\x17\x86\x94J\xe5\xff?\x00K\x16\x86\x94J\xe6\xff?\x00K\x16\x86\x94J\xf1\xff\x7f\x00K\x17\x86\x94J\xe0\xff\xff\x03K\x1a\x86\x94J\xe1\xff\xff\x03K\x1a\x86\x94J\xeb\xff\x0f\x00K\x14\x86\x94J\xf1\xff\x07\x00K\x13\x86\x94J\xe7\xff?\x00K\x16\x86\x94J\xf2\xff\x7f\x00K\x17\x86\x94J\xe8\xff?\x00K\x16\x86\x94J\xec\xff\xff\x01K\x19\x86\x94J\xe2\xff\xff\x03K\x1a\x86\x94J\xe3\xff\xff\x03K\x1a\x86\x94J\xe4\xff\xff\x03K\x1a\x86\x94J\xde\xff\xff\x07K\x1b\x86\x94J\xdf\xff\xff\x07K\x1b\x86\x94J\xe5\xff\xff\x03K\x1a\x86\x94J\xf1\xff\xff\x00K\x18\x86\x94J\xed\xff\xff\x01K\x19\x86\x94J\xf2\xff\x07\x00K\x13\x86\x94J\xe3\xff\x1f\x00K\x15\x86\x94J\xe6\xff\xff\x03K\x1a\x86\x94J\xe0\xff\xff\x07K\x1b\x86\x94J\xe1\xff\xff\x07K\x1b\x86\x94J\xe7\xff\xff\x03K\x1a\x86\x94J\xe2\xff\xff\x07K\x1b\x86\x94J\xf2\xff\xff\x00K\x18\x86\x94J\xe4\xff\x1f\x00K\x15\x86\x94J\xe5\xff\x1f\x00K\x15\x86\x94J\xe8\xff\xff\x03K\x1a\x86\x94J\xe9\xff\xff\x03K\x1a\x86\x94J\xfd\xff\xff\x0fK\x1c\x86\x94J\xe3\xff\xff\x07K\x1b\x86\x94J\xe4\xff\xff\x07K\x1b\x86\x94J\xe5\xff\xff\x07K\x1b\x86\x94J\xec\xff\x0f\x00K\x14\x86\x94J\xf3\xff\xff\x00K\x18\x86\x94J\xed\xff\x0f\x00K\x14\x86\x94J\xe6\xff\x1f\x00K\x15\x86\x94J\xe9\xff?\x00K\x16\x86\x94J\xe7\xff\x1f\x00K\x15\x86\x94J\xe8\xff\x1f\x00K\x15\x86\x94J\xf3\xff\x7f\x00K\x17\x86\x94J\xea\xff?\x00K\x16\x86\x94J\xeb\xff?\x00K\x16\x86\x94J\xee\xff\xff\x01K\x19\x86\x94J\xef\xff\xff\x01K\x19\x86\x94J\xf4\xff\xff\x00K\x18\x86\x94J\xf5\xff\xff\x00K\x18\x86\x94J\xea\xff\xff\x03K\x1a\x86\x94J\xf4\xff\x7f\x00K\x17\x86\x94J\xeb\xff\xff\x03K\x1a\x86\x94J\xe6\xff\xff\x07K\x1b\x86\x94J\xec\xff\xff\x03K\x1a\x86\x94J\xed\xff\xff\x03K\x1a\x86\x94J\xe7\xff\xff\x07K\x1b\x86\x94J\xe8\xff\xff\x07K\x1b\x86\x94J\xe9\xff\xff\x07K\x1b\x86\x94J\xea\xff\xff\x07K\x1b\x86\x94J\xeb\xff\xff\x07K\x1b\x86\x94J\xfe\xff\xff\x0fK\x1c\x86\x94J\xec\xff\xff\x07K\x1b\x86\x94J\xed\xff\xff\x07K\x1b\x86\x94J\xee\xff\xff\x07K\x1b\x86\x94J\xef\xff\xff\x07K\x1b\x86\x94J\xf0\xff\xff\x07K\x1b\x86\x94J\xee\xff\xff\x03K\x1a\x86\x94J\xff\xff\xff?K\x1e\x86\x94e."

HUFFMAN_TABLE = pickle.loads(HUFFMAN_TABLE_RAW)
HUFFMAN_TABLE_DICT = {int2bits(*k): v for v, k in enumerate(HUFFMAN_TABLE)}
